{"ast":null,"code":"var _jsxFileName = \"/Users/janeliu/Desktop/FoodOrder/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === 'REMOVE') {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem\n      };\n    }\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/janeliu/Desktop/FoodOrder/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItem","existingCartItemIndex","updatedItems","updatedItem","concat","findIndex","id","existingItem","filter","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":"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","sourcesContent":["import { useReducer } from 'react';\nimport CartContext from \"./cart-context\";\n\nconst defaultCartState = {\n    items:[],\n    totalAmount: 0\n}\n\nconst cartReducer =(state, action)=>{\n    if(action.type ==='ADD'){\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n\n        \n\n        const existingCartItem = state.items[existingCartItemIndex];\n        \n\n        let updatedItems;\n\n        if(existingCartItem){\n            const updatedItem = {\n                ...existingCartItem,\n                amount: existingCartItem.amount + action.item.amount     \n            }\n            updatedItems = [...state.items];\n            updatedItems[existingCartItemIndex] = updatedItem\n        }else{\n            updatedItems = state.items.concat(action.item);\n        }\n\n        \n\n        return {\n            items: updatedItems,\n            totalAmount: updatedTotalAmount,\n        };\n    }\n    if (action.type ==='REMOVE'){\n\n        const existingCartItemIndex = state.items.findIndex(\n           (item) => item.id===action.id\n      );\n        const existingItem = state.items[existingCartItemIndex];\n        const updatedTotalAmount = state.totalAmount - existingItem.price;\n        let updatedItems;\n        if(existingItem.amount ===1){\n            updatedItems = state.items.filter(item=>item.id !==action.id);\n        }else{\n            const updatedItem = {...existingItem};\n        }\n    }\n    return defaultCartState;\n}\n\nconst CartProvider = (props) => {\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n    const addItemToCartHandler =(item)=>{\n        dispatchCartAction({type: 'ADD', item:item});\n    }\n    const removeItemFromCartHandler =(id)=> {\n        dispatchCartAction({type:'REMOVE', id:id})\n    }\n    const cartContext = {\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItem: addItemToCartHandler,\n        removeItem: removeItemFromCartHandler\n    }\n\n    return( \n    <CartContext.Provider value={cartContext}>\n          {props.children} \n        </CartContext.Provider>)\n}\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}