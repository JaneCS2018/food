{"ast":null,"code":"var _jsxFileName = \"/Users/janeliu/Desktop/FoodOrder/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {};\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: 0,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/janeliu/Desktop/FoodOrder/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItems","concat","item","updatedTotalAmount","price","amount","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAC,EADe;AAErBC,EAAAA,WAAW,EAAE;AAFQ,CAAzB;;AAKA,MAAMC,WAAW,GAAE,CAACC,KAAD,EAAQC,MAAR,KAAiB;AAChC,MAAGA,MAAM,CAACC,IAAP,KAAe,KAAlB,EAAwB;AACpB,UAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;AACA,UAAMC,kBAAkB,GAAGN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYG,MAA/E;AACA,WAAO,EAAP;AACH;;AACD,SAAOZ,gBAAP;AACH,CAPD;;AASA,MAAMa,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAC1B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkClB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAAlD;;AACA,QAAMiB,oBAAoB,GAAGR,IAAD,IAAQ;AAChCO,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAE,KAAP;AAAcG,MAAAA,IAAI,EAACA;AAAnB,KAAD,CAAlB;AACH,GAFD;;AAGA,QAAMS,yBAAyB,GAAEC,EAAE,IAAG;AAClCH,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAC,QAAN;AAAgBa,MAAAA,EAAE,EAACA;AAAnB,KAAD,CAAlB;AACH,GAFD;;AAGA,QAAMC,WAAW,GAAG;AAChBnB,IAAAA,KAAK,EAAEc,SAAS,CAACd,KADD;AAEhBC,IAAAA,WAAW,EAAE,CAFG;AAGhBmB,IAAAA,OAAO,EAAEJ,oBAHO;AAIhBK,IAAAA,UAAU,EAAEJ;AAJI,GAApB;AAOA,sBACA,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACON,KAAK,CAACS;AADb;AAAA;AAAA;AAAA;AAAA,UADA;AAIH,CAnBD;;GAAMV,Y;;KAAAA,Y;AAqBN,eAAeA,YAAf","sourcesContent":["import { useReducer } from 'react';\nimport CartContext from \"./cart-context\";\n\nconst defaultCartState = {\n    items:[],\n    totalAmount: 0\n}\n\nconst cartReducer =(state, action)=>{\n    if(action.type ==='ADD'){\n        const updatedItems = state.items.concat(action.item);\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n        return {};\n    }\n    return defaultCartState;\n}\n\nconst CartProvider = props => {\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n    const addItemToCartHandler =(item)=>{\n        dispatchCartAction({type: 'ADD', item:item});\n    }\n    const removeItemFromCartHandler =id=> {\n        dispatchCartAction({type:'REMOVE', id:id})\n    }\n    const cartContext = {\n        items: cartState.items,\n        totalAmount: 0,\n        addItem: addItemToCartHandler,\n        removeItem: removeItemFromCartHandler\n    }\n\n    return( \n    <CartContext.Provider value={cartContext}>\n          {props.children} \n        </CartContext.Provider>)\n}\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}